spring:
  security:
    oauth2:
      client:
        registration:
          oidc-client:
            client-id: "oidc-client"
            client-secret: "secret"
            client-authentication-method: "client_secret_basic"
            authorization-grant-type: "authorization_code"
            scope:
              - "openid"
              - "user.read"
            redirect-uri: "{baseUrl}/login/oauth2/code/oidc-client"
        provider:
          oidc-client:
            issuer-uri: "http://localhost:4321"
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: user-service
          uri: lb://auth-service
          predicates:
            - Path=/api/users/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
            - TokenRelay=oidc-client
        - id: book-service
          uri: lb://book-service
          predicates:
            - Path=/api/books/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
        - id: discovery-server
          uri: http://eureka:password@${app.eureka-server}:9105
          predicates:
            - Path=/eureka/web
          filters:
            - SetPath=/
        - id: discovery-server-static
          uri: http://eureka:password@${app.eureka-server}:9105
          predicates:
            - Path=/eureka/**

app:
  eureka-server: localhost

server:
  port: 8081

management:
  endpoint:
    info:
      enabled: true
    health:
      show-details: always
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  tracing:
    sampling:
      probability: 1.0

